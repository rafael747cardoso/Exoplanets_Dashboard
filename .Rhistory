dplyr::select_if(has_few_levels) %>%
names()
list_opts_exoplanet_eu_num_nicecat_var = list_names_eu[c(num_vars_eu, nice_cat_var_eu)]
opts_exoplanet_eu_color_var = unlist(unname(list_opts_exoplanet_eu_num_nicecat_var))
# Categoric variables with few levels:
cat_var_eu = df_exoplant_eu %>%
dplyr::select_if(is.character) %>%
dplyr::select_if(has_few_levels) %>%
names()
list_opts_exoplanet_eu_cat_var = list_names_eu[cat_var_eu]
opts_exoplanet_eu_cat_var = unlist(unname(list_opts_exoplanet_eu_cat_var))
input
opts_exoplanet_eu_cat_var
runApp()
# Chosen variables:
x_var_name = input$exoplanet_eu_violin_xvar
x_var = list_opts_exoplanet_eu_num_var[which(list_opts_exoplanet_eu_num_var == x_var_name)] %>%
names()
y_var_name = input$exoplanet_eu_violin_yvar
y_var = list_opts_exoplanet_eu_num_var[which(list_opts_exoplanet_eu_num_var == y_var_name)] %>%
names()
x_var_name
x_var
x_var = list_opts_exoplanet_eu_num_var[which(list_opts_exoplanet_eu_cat_var == x_var_name)] %>%
names()
x_var
# Chosen variables:
x_var_name = input$exoplanet_eu_violin_xvar
x_var = list_opts_exoplanet_eu_num_var[which(list_opts_exoplanet_eu_cat_var == x_var_name)] %>%
names()
x_var
x_var_name
x_var = list_opts_exoplanet_eu_cat_var[which(list_opts_exoplanet_eu_cat_var == x_var_name)] %>%
names()
x_var
y_var_name = input$exoplanet_eu_violin_yvar
y_var = list_opts_exoplanet_eu_num_var[which(list_opts_exoplanet_eu_num_var == y_var_name)] %>%
names()
y_var_name
y_var
g_var_name = input$exoplanet_eu_violin_groupvar
g_var = list_opts_exoplanet_eu_cat_var[which(list_opts_exoplanet_eu_cat_var == s_var_name)] %>%
names()
g_var_name = input$exoplanet_eu_violin_groupvar
g_var = list_opts_exoplanet_eu_cat_var[which(list_opts_exoplanet_eu_cat_var == g_var_name)] %>%
names()
g_var_name
g_var
df_plot = df_exoplant_eu[, c(x_var, y_var, g_var)] %>%
tidyr::drop_na()
head(df_plot)
dim(df_plot)
list_opts_exoplanet_eu_cat_var
cat_var_eu
df_exoplant_eu[, cat_var_eu]
df_exoplant_eu[, cat_var_eu] %>% t()
df_exoplant_eu[, cat_var_eu[1]] %>% t()
cat_var_eu[1]
df_exoplant_eu[, cat_var_eu[2]] %>% t()
df_exoplant_eu[, cat_var_eu] %>% table()
df_exoplant_eu[, cat_var_eu[1]] %>% table()
for(i in cat_var_eu){
print(df_exoplant_eu[, i] %>% table())
}
for(i in cat_var_eu){
print(i)
print(df_exoplant_eu[, i] %>% table())
}
cat_var_eu
cat_var_eu = cat_var_eu[which(!(cat_var_eu %in% c("planet_status", "star_magnetic_field")))]
cat_var_eu
for(i in cat_var_eu){
print(i)
print(df_exoplant_eu[, i] %>% table())
}
cat_var_eu = df_exoplant_eu %>%
dplyr::select_if(is.character) %>%
dplyr::select_if(has_few_levels) %>%
names()
cat_var_eu = cat_var_eu[which(!(cat_var_eu %in% c("planet_status", "star_magnetic_field")))] # too few data
list_opts_exoplanet_eu_cat_var = list_names_eu[cat_var_eu]
opts_exoplanet_eu_cat_var = unlist(unname(list_opts_exoplanet_eu_cat_var))
opts_exoplanet_eu_cat_var
input = list()
input$exoplanet_eu_histogram_xvar = "Planet mass (Jupiter mass)"
input$exoplanet_eu_histogram_bins = 100
input$exoplanet_eu_histogram_range = c(0, 135.3)
input$exoplanet_eu_2d_density_xvar = "Planet mass (Jupiter mass)"
input$exoplanet_eu_2d_density_yvar = "Planet radius (Jupiter radius)"
input$exoplanet_eu_2d_density_xbins = 100
input$exoplanet_eu_2d_density_ybins = 100
input$exoplanet_eu_scatter_xvar = "Planet mass (Jupiter mass)"
input$exoplanet_eu_scatter_yvar = "Planet radius (Jupiter radius)"
input$exoplanet_eu_bubble_xvar = "Orbit semi-major axis (AU)"
input$exoplanet_eu_bubble_yvar = "Orbit eccentricity"
input$exoplanet_eu_bubble_sizevar = "Planet radius (Jupiter radius)"
input$exoplanet_eu_bubble_colorvar = "Detection method"
input$exoplanet_eu_violin_xvar = "Detection method"
input$exoplanet_eu_violin_yvar = "Planet mass (Jupiter mass)"
input$exoplanet_eu_violin_groupvar = "Star detected disc"
input
# Chosen variables:
x_var_name = input$exoplanet_eu_violin_xvar
x_var = list_opts_exoplanet_eu_cat_var[which(list_opts_exoplanet_eu_cat_var == x_var_name)] %>%
names()
y_var_name = input$exoplanet_eu_violin_yvar
y_var = list_opts_exoplanet_eu_num_var[which(list_opts_exoplanet_eu_num_var == y_var_name)] %>%
names()
g_var_name = input$exoplanet_eu_violin_groupvar
g_var = list_opts_exoplanet_eu_cat_var[which(list_opts_exoplanet_eu_cat_var == g_var_name)] %>%
names()
df_plot = df_exoplant_eu[, c(x_var, y_var, g_var)] %>%
tidyr::drop_na()
df_plot
df = df_plot
# NAs:
df_plot[which(is.na(df_plot[, x_var])), x_var] = "NA"
df_plot[which(is.na(df_plot[, g_var])), g_var] = "NA"
df_plot = df_plot[which(!is.na(df_plot[, y_var])), ]
df_plot
df_plot = df_exoplant_eu[, c(x_var, y_var, g_var)]
df_plot
# NAs:
df_plot[which(is.na(df_plot[, x_var])), x_var] = "NA"
df_plot[which(is.na(df_plot[, g_var])), g_var] = "NA"
df_plot = df_plot[which(!is.na(df_plot[, y_var])), ]
df_plot
df_plot$planet_detection_type %>% table()
df_plot$star_detected_disc %>% table()
df_plot = df_exoplant_eu[, c(x_var, y_var, g_var)] %>%
tidyr::drop_na()
df_plot
# Levels order:
sorted_levels1 = sort(unique(df_plot[, x_var]))
df_plot[, x_var] = factor(x = df_plot[, x_var],
levels = sorted_levels1)
sorted_levels2 = sort(unique(df_plot[, g_var]))
df_plot[, g_var] = factor(x = df_plot[, g_var],
levels = sorted_levels2)
df_plot
str(df_plot)
df = df_plot
my_palette = colorRampPalette(c("#111539", "#97A1D9"))
my_palette = colorRampPalette(c("#111539", "#97A1D9"))
n_levels2 = length(unique(df_plot[, g_var]))
n_levels2
p = plot_ly(
data = df_plot,
type = "violin",
x = ~eval(parse(text = x_var)),
y = ~eval(parse(text = num_var)),
color = ~eval(parse(text = g_var)),
colors = my_palette(n_levels2),
spanmode = "hard",
alpha = 1,
box = list(
visible = FALSE
),
meanline = list(
visible = FALSE
),
points = FALSE,
scalemode = "width"  ### this doesn't work (R plotly bug?)
) %>%
layout(
xaxis = list(
title = paste0("<b>", x_var_name, "</b>"),
titlefont = list(
size = 20
),
tickfont = list(
size = 18
),
categoryorder = "array"
),
yaxis = list(
title = paste0("<b>", y_var_name, "</b>"),
titlefont = list(
size = 20
),
tickfont = list(
size = 18
)#,
# type = "log"
),
margin = list(
l = 10,
r = 10,
t = 10,
b = 10
),
legend = list(
title = list(
text = paste0("<br><b>", g_var_name, "</b>"),
font = list(
size = 18
)
)
),
hoverlabel = list(
font = list(
size = 16
)
),
showlegend = TRUE,
violinmode = "group"
)
p
plot_ly(
data = df_plot,
type = "violin",
x = ~eval(parse(text = x_var)),
y = ~eval(parse(text = y_var)),
color = ~eval(parse(text = g_var)),
colors = my_palette(n_levels2),
spanmode = "hard",
alpha = 1,
box = list(
visible = FALSE
),
meanline = list(
visible = FALSE
),
points = FALSE,
scalemode = "width"  ### this doesn't work (R plotly bug?)
) %>%
layout(
xaxis = list(
title = paste0("<b>", x_var_name, "</b>"),
titlefont = list(
size = 20
),
tickfont = list(
size = 18
),
categoryorder = "array"
),
yaxis = list(
title = paste0("<b>", y_var_name, "</b>"),
titlefont = list(
size = 20
),
tickfont = list(
size = 18
)#,
# type = "log"
),
margin = list(
l = 10,
r = 10,
t = 10,
b = 10
),
legend = list(
title = list(
text = paste0("<br><b>", g_var_name, "</b>"),
font = list(
size = 18
)
)
),
hoverlabel = list(
font = list(
size = 16
)
),
showlegend = TRUE,
violinmode = "group"
)
df_exoplant_eu$star_detected_disc
plot_ly(
data = df_plot,
type = "violin",
x = ~eval(parse(text = x_var)),
y = ~eval(parse(text = y_var)),
color = ~eval(parse(text = x_var)),
colors = my_palette(n_levels2),
spanmode = "hard",
alpha = 1,
box = list(
visible = FALSE
),
meanline = list(
visible = FALSE
),
points = FALSE,
scalemode = "width"  ### this doesn't work (R plotly bug?)
) %>%
layout(
xaxis = list(
title = paste0("<b>", x_var_name, "</b>"),
titlefont = list(
size = 20
),
tickfont = list(
size = 18
),
categoryorder = "array"
),
yaxis = list(
title = paste0("<b>", y_var_name, "</b>"),
titlefont = list(
size = 20
),
tickfont = list(
size = 18
)#,
# type = "log"
),
margin = list(
l = 10,
r = 10,
t = 10,
b = 10
),
legend = list(
title = list(
text = paste0("<br><b>", g_var_name, "</b>"),
font = list(
size = 18
)
)
),
hoverlabel = list(
font = list(
size = 16
)
),
showlegend = TRUE,
violinmode = "group"
)
plot_ly(
data = df_plot,
type = "violin",
x = ~eval(parse(text = x_var)),
y = ~eval(parse(text = y_var)),
color = ~eval(parse(text = x_var)),
colors = my_palette(n_levels2),
spanmode = "hard",
alpha = 1,
box = list(
visible = FALSE
),
meanline = list(
visible = FALSE
),
points = FALSE,
scalemode = "width"  ### this doesn't work (R plotly bug?)
) %>%
layout(
xaxis = list(
title = paste0("<b>", x_var_name, "</b>"),
titlefont = list(
size = 20
),
tickfont = list(
size = 18
),
categoryorder = "array"
),
yaxis = list(
title = paste0("<b>", y_var_name, "</b>"),
titlefont = list(
size = 20
),
tickfont = list(
size = 18
)#,
# type = "log"
),
margin = list(
l = 10,
r = 10,
t = 10,
b = 10
),
legend = list(
title = list(
text = paste0("<br><b>", g_var_name, "</b>"),
font = list(
size = 18
)
)
),
hoverlabel = list(
font = list(
size = 16
)
),
showlegend = TRUE#,
# violinmode = "group"
)
plot_ly(
data = df_plot,
type = "violin",
x = ~eval(parse(text = x_var)),
y = ~eval(parse(text = y_var)),
color = ~eval(parse(text = x_var)),
colors = my_palette(n_levels2),
spanmode = "hard",
alpha = 1,
box = list(
visible = FALSE
),
meanline = list(
visible = FALSE
),
points = FALSE,
scalemode = "width"  ### this doesn't work (R plotly bug?)
) %>%
layout(
xaxis = list(
title = paste0("<b>", x_var_name, "</b>"),
titlefont = list(
size = 20
),
tickfont = list(
size = 18
),
categoryorder = "array"
),
yaxis = list(
title = paste0("<b>", y_var_name, "</b>"),
titlefont = list(
size = 20
),
tickfont = list(
size = 18
),
type = "log"
),
margin = list(
l = 10,
r = 10,
t = 10,
b = 10
),
legend = list(
title = list(
text = paste0("<br><b>", g_var_name, "</b>"),
font = list(
size = 18
)
)
),
hoverlabel = list(
font = list(
size = 16
)
),
showlegend = TRUE
)
plot_ly(
data = df_plot,
type = "violin",
x = ~eval(parse(text = x_var)),
y = ~eval(parse(text = y_var)),
color = ~eval(parse(text = x_var)),
colors = my_palette(n_levels2),
spanmode = "hard",
alpha = 1,
box = list(
visible = FALSE
),
meanline = list(
visible = FALSE
),
points = FALSE,
scalemode = "width"  ### this doesn't work (R plotly bug?)
) %>%
layout(
xaxis = list(
title = paste0("<b>", x_var_name, "</b>"),
titlefont = list(
size = 20
),
tickfont = list(
size = 18
),
categoryorder = "array"
),
yaxis = list(
title = paste0("<b>", y_var_name, "</b>"),
titlefont = list(
size = 20
),
tickfont = list(
size = 18
)#,
# type = "log"
),
margin = list(
l = 10,
r = 10,
t = 10,
b = 10
),
legend = list(
title = list(
text = paste0("<br><b>", g_var_name, "</b>"),
font = list(
size = 18
)
)
),
hoverlabel = list(
font = list(
size = 16
)
),
showlegend = TRUE
)
